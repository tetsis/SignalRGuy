{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ObjectInModal","props","react_default","a","createElement","Row","Col","xs","Fragment","properties","map","property","propertyIndex","propertyIndexes","Object","toConsumableArray","push","className","Form","Control","type","placeholder","value","name","onChange","e","handleChangePropName","argIndex","Select","defaultValue","handleChangePropType","Button","variant","onClick","handleAddProperty","plus","handleDeleteProp","trash_fill","event","ObjectInSendMethod","key","handleChangeArgPropertyValue","methodIndex","ObjectInReceiveMethod","DisplayNotify","ToastContainer","position","Toast","Header","src","alt","Body","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeUrl","setState","url","target","handleDisconnect","state","connection","stop","addAndSaveLog","handleShowModal","index","modalSendOrReceive","methodNameInModal","methodArgsInModal","modalAddOrEdit","modalIndex","method","sendMethods","receiveMethods","args","JSON","parse","stringify","showModal","handleCloseModal","handleAddArg","handleDeleteArg","splice","i","length","console","log","handleChangeMethodName","handleChangeArgName","handleChangeArgType","handleAddMethod","methods","filteredArgs","checkArrayName","saveSendMethods","saveReceiveMethods","handleDeleteMethod","handleEditMethod","handleChangeArgValue","handleClearLogs","logs","json","localStorage","setItem","setSendMethods","getItem","setReceiveMethods","message","now","Date","datetime","toISOStringWithTimezone","isConnecting","sendJson","receiveJson","logsJson","HubConnectionBuilder","withUrl","build","start","then","_this2","catch","err","onclose","forEach","on","_len","arguments","data","Array","_key","toStringData","render","arg","_this3","parseInt","fromEntries","p","convertSendingData","result","_this4","_this$state$connectio","invoke","apply","concat","error","array","_this5","filtered","filter","item","match","date","tzo","getTimezoneOffset","dif","pad","num","norm","Math","floor","abs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","_this6","InputGroup","FormControl","handleConnect","size","disabled","Card","as","Group","Container","handleSend","ListGroup","reverse","Item","Modal","show","onHide","closeButton","Title","Label","Footer","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd343923.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  HubConnectionBuilder,\n} from '@microsoft/signalr';\nimport { Container, Row, Col, Form, Button, Modal, ListGroup, InputGroup, FormControl, Card, Toast, ToastContainer } from 'react-bootstrap';\nimport { TrashFill, Plus } from 'react-bootstrap-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction ObjectInModal(props) {\n  return (\n    <Row>\n      <Col xs=\"auto\">\n      <>\n      &nbsp;\n      </>\n      </Col>\n      <Col xs=\"auto\">\n        {props.properties.map((property, propertyIndex) => {\n          let propertyIndexes = [ ...props.propertyIndexes ];\n          propertyIndexes.push(propertyIndex);\n\n          return (\n            <>\n              <Row className=\"mb-3\">\n                <Col xs=\"auto\">\n                  <Form.Control type=\"text\" placeholder=\"Input argument name\" value={property.name} onChange={(e) => props.handleChangePropName(e, props.argIndex, propertyIndexes)} />\n                </Col>\n                <Col xs=\"auto\">\n                  <Form.Select defaultValue={property.type} onChange={(e) => props.handleChangePropType(e, props.argIndex, propertyIndexes)}>\n                    <option value=\"string\">string</option>\n                    <option value=\"int\">int</option>\n                    <option value=\"bool\">bool</option>\n                    <option value=\"DateTime\">DateTime</option>\n                    <option value=\"object\">object</option>\n                  </Form.Select>\n                </Col>\n                <Col xs=\"auto\">\n                  {property.type === \"object\" &&\n                    <Button variant=\"info\" type=\"button\" onClick={() => props.handleAddProperty(props.argIndex, propertyIndexes)}>\n                      <Plus/>\n                    </Button>\n                  }\n                  <Button variant=\"danger\" type=\"button\" onClick={() => props.handleDeleteProp(props.argIndex, propertyIndexes)}>\n                    <TrashFill/>\n                  </Button>\n                </Col>\n              </Row>\n              {property.type === \"object\" &&\n                <ObjectInModal\n                  argIndex={props.argIndex}\n                  properties={property.properties}\n                  propertyIndexes={propertyIndexes}\n                  handleChangePropName={(event, argIndex, propertyIndexes) => props.handleChangePropName(event, argIndex, propertyIndexes)}\n                  handleChangePropType={(event, argIndex, propertyIndexes) => props.handleChangePropType(event, argIndex, propertyIndexes)}\n                  handleAddProperty={(argIndex, propertyIndexes) => props.handleAddProperty(argIndex, propertyIndexes)}\n                  handleDeleteProp={(argIndex, propertyIndexes) => props.handleDeleteProp(argIndex, propertyIndexes)}\n                />\n              }\n            </>\n          )\n        })}\n      </Col>\n    </Row>\n  );\n}\n\nfunction ObjectInSendMethod(props) {\n  return (\n    <Row>\n      <Col xs=\"auto\">\n      <>\n      &nbsp;\n      </>\n      </Col>\n      <Col xs=\"auto\">\n        {props.properties.map((property, propertyIndex) => {\n          let propertyIndexes = [ ...props.propertyIndexes ];\n          propertyIndexes.push(propertyIndex);\n\n          return (\n            <div key={propertyIndex}>\n              <Row key={propertyIndex} className=\"mb-3\">\n                <Col xs=\"auto\">\n                  {property.name} ( {property.type} )\n                </Col>\n                <Col xs=\"auto\">\n                  {property.type !== \"object\" &&\n                    <Form.Control type=\"text\" placeholder=\"Input value\" value={property.value} onChange={(e) => props.handleChangeArgPropertyValue(e, props.methodIndex, props.argIndex, propertyIndexes)} />\n                  }\n                </Col>\n              </Row>\n              {property.type === \"object\" &&\n                <ObjectInSendMethod\n                  methodIndex={props.methodIndex}\n                  argIndex={props.argIndex}\n                  properties={property.properties}\n                  propertyIndexes={propertyIndexes}\n                  handleChangeArgPropertyValue={(event, methodIndex, argIndex, propertyIndexes) => props.handleChangeArgPropertyValue(event, methodIndex, argIndex, propertyIndexes)}\n                />\n              }\n            </div>\n          );\n        })}\n      </Col>\n    </Row>\n  );\n}\n\nfunction ObjectInReceiveMethod(props) {\n  return (\n    <Row>\n      <Col xs=\"auto\">\n      <>\n      &nbsp;\n      </>\n      </Col>\n      <Col xs=\"auto\">\n        {props.properties.map((property, propertyIndex) => \n          <div key={propertyIndex}>\n            <Row key={propertyIndex} className=\"mb-3\">\n              <Col xs=\"auto\">\n                {property.name} ( {property.type} )\n              </Col>\n            </Row>\n            {property.type === \"object\" &&\n              <ObjectInReceiveMethod\n                properties={property.properties}\n              />\n            }\n          </div>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nfunction DisplayNotify(props) {\n  return (\n    <ToastContainer position=\"top-end\">\n\n      <Toast>\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n          <strong className=\"me-auto\">Bootstrap</strong>\n          <small className=\"text-muted\">just now</small>\n        </Toast.Header>\n        <Toast.Body>See? Just like this.</Toast.Body>\n      </Toast>\n\n    </ToastContainer>\n  );\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"https://localhost:44338/testHub\",\n      isConnecting: false,\n      showModal: false,\n      modalAddOrEdit: true,\n      modalSendOrReceive: true,\n      modalIndex: -1,\n      methodNameInModal: \"\",\n      methodArgsInModal: [],\n      sendMethods: [],\n      receiveMethods: [],\n      logs: [],\n      connection: null\n    };\n  }\n\n  componentDidMount() {\n    // ローカルストレージがなければ初期化して保存\n    if (!localStorage.getItem(\"SendMethods\")) {\n      localStorage.setItem(\"SendMethods\", \"[]\");\n    }\n    if (!localStorage.getItem(\"ReceiveMethods\")) {\n      localStorage.setItem(\"ReceiveMethods\", \"[]\");\n    }\n    if (!localStorage.getItem(\"Logs\")) {\n      localStorage.setItem(\"Logs\", \"[]\");\n    }\n\n    // ローカルストレージから情報を取得\n    let sendJson = localStorage.getItem(\"SendMethods\");\n    let sendMethods = JSON.parse(sendJson);\n    this.setState({sendMethods: sendMethods});\n\n    let receiveJson = localStorage.getItem(\"ReceiveMethods\");\n    let receiveMethods = JSON.parse(receiveJson);\n    this.setState({receiveMethods: receiveMethods});\n\n    let logsJson = localStorage.getItem(\"Logs\");\n    let logs = JSON.parse(logsJson);\n    this.setState({logs: logs});\n  }\n\n  handleChangeUrl = (event) => {\n    this.setState({url: event.target.value});\n  }\n\n  async handleConnect(url) {\n    const connection = new HubConnectionBuilder()\n      .withUrl(url)\n      //.withAutomaticReconnect()\n      .build();\n\n    this.setState({connection}, () => {\n      connection.start()\n      .then(() => {\n        console.log(\"SignalR Connected.\");\n        this.setState({isConnecting: true});\n        this.addAndSaveLog(\"Connecting to \" + url);\n      })\n      .catch(err => {\n        console.log('Error while establishing connection :(')\n        this.setState({isConnecting: false});\n        this.addAndSaveLog(\"Could not connect to \" + url);\n      });\n\n      connection.onclose(() => {\n        this.setState({isConnecting: false});\n      });\n\n      this.state.receiveMethods.forEach(method => {\n        connection.on(method.name, (...data) => {\n          console.log(\"Receive: \");\n          console.log(method.name, data);\n          this.addAndSaveLog(\"Receive. Method: \" + method.name + \", Args: \" + this.toStringData(method.args, data));\n          this.render(<DisplayNotify />);\n        });\n      });\n    });\n  }\n\n  handleDisconnect = () => {\n    this.state.connection.stop();\n    this.addAndSaveLog(\"Disconnecting to \" + this.state.url);\n  }\n\n  convertSendingData(arg) {\n    if (arg.type === \"int\") {\n      return parseInt(arg.value, 10);\n    }\n    else if (arg.type === \"object\") {\n      return Object.fromEntries(arg.properties.map((p) => [p.name, this.convertSendingData(p)]));\n    }\n    else {\n      return arg.value;\n    }\n  }\n\n  toStringData(args, data) {\n    let result = [];\n    for (let i = 0; i < args.length; i++) {\n      result.push(args[i].name + \":\" + JSON.stringify(data[i]));\n    }\n    return result;\n    //return arg.name + \":\" + JSON.stringify(this.convertSendingData(arg));\n  }\n\n  handleSend(index) {\n    let method = this.state.sendMethods[index];\n\n    try {\n      this.state.connection.invoke(method.name, ...method.args.map(arg => this.convertSendingData(arg)));\n      console.log(\"Send: \");\n      console.log(method.name, method.args.map(arg => this.convertSendingData(arg)));\n      this.addAndSaveLog(\"Send. Method: \" + method.name + \", Args: \" + this.toStringData(method.args, method.args.map(arg => this.convertSendingData(arg))));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  handleShowModal = (index, modalSendOrReceive) => {\n    this.setState({modalSendOrReceive: modalSendOrReceive});\n\n    if (index === -1) {\n      this.setState({methodNameInModal: \"\", methodArgsInModal: [{name: \"\", type: \"string\"}], modalAddOrEdit: true, modalIndex: -1});\n    }\n    else {\n      let method = modalSendOrReceive ? this.state.sendMethods[index] : this.state.receiveMethods[index];\n      let args = JSON.parse(JSON.stringify(method.args));\n      this.setState({methodNameInModal: method.name, methodArgsInModal: args, modalAddOrEdit: false, modalIndex: index});\n    }\n\n    this.setState({showModal: true})\n  }\n    \n  handleCloseModal = () => this.setState({showModal: false});\n\n  handleAddArg = () => {\n    let args = this.state.methodArgsInModal;\n    args.push({name: \"\", type: \"string\"});\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleDeleteArg = (index) => {\n    let args = this.state.methodArgsInModal;\n    args.splice(index, 1);\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleAddProperty = (argIndex, propertyIndexes) => {\n    let args = this.state.methodArgsInModal;\n    let arg = args[argIndex];\n    let properties = arg.properties;\n    for (let i = 0; i < propertyIndexes.length; i++) {\n      properties = properties[propertyIndexes[i]].properties;\n    }\n    properties.push({name: \"\", type: \"string\"});\n    console.log(args);\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleDeleteProp = (argIndex, propertyIndexes) => {\n    let args = this.state.methodArgsInModal;\n    let arg = args[argIndex];\n    let properties = arg.properties;\n    for (let i = 0; i < propertyIndexes.length - 1; i++) {\n      properties = properties[propertyIndexes[i]].properties;\n    }\n    properties.splice(propertyIndexes[propertyIndexes.length - 1], 1);\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleChangeMethodName = (event) => {\n    this.setState({methodNameInModal: event.target.value});\n  }\n\n  handleChangeArgName = (event, index) => {\n    let args = this.state.methodArgsInModal;\n    args[index].name = event.target.value;\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleChangeArgType = (event, index) => {\n    let args = this.state.methodArgsInModal;\n    args[index].type = event.target.value;\n    if (event.target.value === \"object\") {\n      args[index].properties = [];\n      delete args[index].value;\n    }\n    else {\n      delete args[index].properties;\n    }\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleChangePropName = (event, argIndex, propertyIndexes) => {\n    let args = this.state.methodArgsInModal;\n    let arg = args[argIndex];\n    let properties = arg.properties;\n    for (let i = 0; i < propertyIndexes.length - 1; i++) {\n      properties = properties[propertyIndexes[i]].properties;\n    }\n    properties[propertyIndexes[propertyIndexes.length - 1]].name = event.target.value;\n    this.setState({methodArgsInModal: args});\n  }\n\n  handleChangePropType = (event, argIndex, propertyIndexes) => {\n    let args = this.state.methodArgsInModal;\n    let arg = args[argIndex];\n    let properties = arg.properties;\n    for (let i = 0; i < propertyIndexes.length - 1; i++) {\n      properties = properties[propertyIndexes[i]].properties;\n    }\n    properties[propertyIndexes[propertyIndexes.length - 1]].type = event.target.value;\n    if (event.target.value === \"object\") {\n      properties[propertyIndexes[propertyIndexes.length - 1]].properties = [];\n      delete properties[propertyIndexes[propertyIndexes.length - 1]].value;\n    }\n    this.setState({methodArgsInModal: args});\n  }\n\n  checkArrayName(array) {\n    let filtered = array.filter(item => item.name.match(/^[A-Za-z0-9]+$/));\n    array.forEach(item => {\n      if (\"properties\" in item) {\n        item.properties = this.checkArrayName(item.properties);\n      }\n    });\n    return filtered;\n  }\n\n  handleAddMethod = () => {\n    let methods;\n    if (this.state.modalSendOrReceive) {\n      methods = this.state.sendMethods;\n    }\n    else {\n      methods = this.state.receiveMethods;\n    }\n\n    // 名前が条件に合うもののみ使う\n    let args = this.state.methodArgsInModal;\n    let filteredArgs = this.checkArrayName(args);\n\n    methods.push({name: this.state.methodNameInModal, args: filteredArgs});\n\n    if (this.state.modalSendOrReceive) {\n      this.setState({sendMethods: methods});\n      this.saveSendMethods();\n    }\n    else {\n      this.setState({receiveMethods: methods});\n      this.saveReceiveMethods();\n    }\n\n    this.handleCloseModal();\n  }\n\n  handleDeleteMethod = () => {\n    let methods;\n    if (this.state.modalSendOrReceive) {\n      methods = this.state.sendMethods;\n    }\n    else {\n      methods = this.state.receiveMethods;\n    }\n\n    methods.splice(this.state.modalIndex, 1);\n\n    if (this.state.modalSendOrReceive) {\n      this.setState({sendMethods: methods});\n      this.saveSendMethods();\n    }\n    else {\n      this.setState({receiveMethods: methods});\n      this.saveReceiveMethods();\n    }\n\n    this.handleCloseModal();\n  }\n  \n  handleEditMethod = () => {\n    let methods;\n    if (this.state.modalSendOrReceive) {\n      methods = this.state.sendMethods;\n    }\n    else {\n      methods = this.state.receiveMethods;\n    }\n\n    // 名前が条件に合うもののみ使う\n    let args = this.state.methodArgsInModal;\n    let filteredArgs = this.checkArrayName(args);\n\n    methods[this.state.modalIndex] = {name: this.state.methodNameInModal, args: filteredArgs};\n\n    if (this.state.modalSendOrReceive) {\n      this.setState({sendMethods: methods});\n      this.saveSendMethods();\n    }\n    else {\n      this.setState({receiveMethods: methods});\n      this.saveReceiveMethods();\n    }\n\n    this.handleCloseModal();\n  }\n  \n  handleChangeArgValue = (event, methodIndex, argIndex) => {\n    let sendMethods = this.state.sendMethods;\n    sendMethods[methodIndex].args[argIndex].value = event.target.value;\n    this.setState({sendMethods: sendMethods});\n\n    this.saveSendMethods();\n  }\n\n  handleChangeArgPropertyValue = (event, methodIndex, argIndex, propertyIndexes) => {\n    let sendMethods = this.state.sendMethods;\n    let sendMethod = sendMethods[methodIndex];\n    let args = sendMethod.args;\n    let arg = args[argIndex];\n    let properties = arg.properties;\n    for (let i = 0; i < propertyIndexes.length - 1; i++) {\n      properties = properties[propertyIndexes[i]].properties;\n    }\n    properties[propertyIndexes[propertyIndexes.length - 1]].value = event.target.value;\n    this.setState({sendMethods: sendMethods});\n\n    this.saveSendMethods();\n  }\n\n  handleClearLogs = () => {\n    let logs = this.state.logs;\n    logs = [];\n    this.setState({logs: logs});\n\n    let json = JSON.stringify(logs);\n    localStorage.setItem(\"Logs\", json);\n\n  }\n\n  setSendMethods = () => {\n    // ローカルストレージがなければ初期化して保存\n    if (!localStorage.getItem(\"SendMethods\")) {\n      let sendMethods = JSON.parse(\"[]\");\n      localStorage.setItem(\"SendMethods\", sendMethods);\n    }\n\n    let json = localStorage.getItem(\"SendMethods\");\n    let sendMethods = JSON.parse(json);\n    this.setState({sendMethods: sendMethods});\n  }\n  setReceiveMethods = () => {\n    // ローカルストレージがなければ初期化して保存\n    if (!localStorage.getItem(\"ReceiveMethods\")) {\n      let receiveMethods = JSON.parse(\"[]\");\n      localStorage.setItem(\"ReceiveMethods\", receiveMethods);\n    }\n\n    let json = localStorage.getItem(\"ReceiveMethods\");\n    let receiveMethods = JSON.parse(json);\n    this.setState({receiveMethods: receiveMethods});\n  }\n\n  saveSendMethods = () => {\n    let sendMethods = this.state.sendMethods;\n    let json = JSON.stringify(sendMethods);\n    localStorage.setItem(\"SendMethods\", json);\n  }\n  saveReceiveMethods = () => {\n    let receiveMethods = this.state.receiveMethods;\n    let json = JSON.stringify(receiveMethods);\n    localStorage.setItem(\"ReceiveMethods\", json);\n  }\n\n  toISOStringWithTimezone(date) {\n    var tzo = -date.getTimezoneOffset(),\n        dif = tzo >= 0 ? '+' : '-',\n        pad = function(num) {\n            var norm = Math.floor(Math.abs(num));\n            return (norm < 10 ? '0' : '') + norm;\n        };\n\n    return date.getFullYear() +\n        '-' + pad(date.getMonth() + 1) +\n        '-' + pad(date.getDate()) +\n        'T' + pad(date.getHours()) +\n        ':' + pad(date.getMinutes()) +\n        ':' + pad(date.getSeconds()) +\n        '.' + pad(date.getMilliseconds()) +\n        dif + pad(tzo / 60) +\n        ':' + pad(tzo % 60);\n  }\n\n  addAndSaveLog = (message) => {\n    let logs = this.state.logs;\n    let now = new Date();\n    logs.push({datetime: this.toISOStringWithTimezone(now), message: message});\n    this.setState({logs: logs});\n\n    let json = JSON.stringify(logs);\n    localStorage.setItem(\"Logs\", json);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"url\">\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              value={this.state.url}\n              onChange={this.handleChangeUrl}\n            />\n            {!this.state.isConnecting &&\n              <Button variant=\"primary\" type=\"button\" onClick={() => this.handleConnect(this.state.url)}>\n                Connect\n              </Button>\n            }\n            {this.state.isConnecting &&\n              <Button variant=\"outline-danger\" type=\"button\" onClick={this.handleDisconnect}>\n                Disconnect\n              </Button>\n            }\n          </InputGroup>\n        </div>\n\n        <div className=\"send-and-receive\">\n          <div className=\"methods\">\n            <h2>\n              Send Methods\n              <Button className=\"stick-button\" variant=\"info\" size=\"sm\" onClick={() => this.handleShowModal(-1, true)} disabled={this.state.isConnecting}>\n                Add\n              </Button>\n            </h2>\n            <div className=\"method-content\">\n              {this.state.sendMethods.map((method, methodIndex) => \n                <Card key={methodIndex} className=\"card\">\n                  <Card.Header as=\"h3\">\n                    {method.name}\n                    <Button className=\"stick-button\" variant=\"success\" size=\"sm\" onClick={() => this.handleShowModal(methodIndex, true)} disabled={this.state.isConnecting}>\n                      Edit\n                    </Button>\n                  </Card.Header>\n                  <Card.Body>\n                    <Form>\n                      <Form.Group as={Row}>\n                      {method.args.map((arg, argIndex) =>\n\n                      <Container key={argIndex}>\n                        <Row className=\"mb-3\">\n                          <Col xs=\"auto\">\n                            {arg.name} ( {arg.type} )\n                          </Col>\n                          <Col xs=\"auto\">\n                            {arg.type !== \"object\" &&\n                              <Form.Control type=\"text\" placeholder=\"Input value\" value={arg.value} onChange={(e) => this.handleChangeArgValue(e, methodIndex, argIndex)} />\n                            }\n                          </Col>\n                        </Row>\n                        {arg.type === \"object\" &&\n                          <ObjectInSendMethod\n                            methodIndex={methodIndex}\n                            argIndex={argIndex}\n                            properties={arg.properties}\n                            propertyIndexes={[]}\n                            handleChangeArgPropertyValue={(event, methodIndex, argIndex, propertyIndexes) => this.handleChangeArgPropertyValue(event, methodIndex, argIndex, propertyIndexes)}\n                          />\n                        }\n                      </Container>\n                      )}\n                      </Form.Group>\n                    </Form>\n                    <Button onClick={() => this.handleSend(methodIndex)} disabled={!this.state.isConnecting}>\n                      Send\n                    </Button>\n                  </Card.Body>\n                </Card>\n              )}\n            </div>\n          </div>\n          <div className=\"methods\">\n            <h2>\n              Receive Methods\n              <Button className=\"stick-button\" variant=\"info\" size=\"sm\" onClick={() => this.handleShowModal(-1, false)} disabled={this.state.isConnecting}>\n                Add\n              </Button>\n            </h2>\n            <div className=\"method-content\">\n              {this.state.receiveMethods.map((method, methodIndex) => \n                <Card key={methodIndex} className=\"card\">\n                  <Card.Header as=\"h3\">\n                    {method.name}\n                    <Button className=\"stick-button\" variant=\"success\" size=\"sm\" onClick={() => this.handleShowModal(methodIndex, false)} disabled={this.state.isConnecting}>\n                      Edit\n                    </Button>\n                  </Card.Header>\n                  <Card.Body>\n                    {method.args.map((arg, argIndex) =>\n                      <Container key={argIndex}>\n                        <Row className=\"mb-3\">\n                          <Col xs=\"auto\">\n                            {arg.name} ( {arg.type} )\n                          </Col>\n                        </Row>\n                        {arg.type === \"object\" &&\n                          <ObjectInReceiveMethod\n                            properties={arg.properties}\n                          />\n                        }\n                      </Container>\n                    )}\n                  </Card.Body>\n                </Card>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"logs\">\n            <h2>\n              Logs\n              <Button className=\"stick-button\" variant=\"outline-warning\" size=\"sm\" onClick={this.handleClearLogs}>\n                Clear\n              </Button>\n\n\n\n            </h2>\n            <div>\n              <ListGroup>\n                {this.state.logs.reverse().map((log ,index) => \n                  <ListGroup.Item key={index}>{log.datetime} : {log.message}</ListGroup.Item>\n                )}\n              </ListGroup>\n            </div>\n        </div>\n\n        <Modal size=\"lg\" show={this.state.showModal} onHide={this.handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {this.state.modalSendOrReceive &&\n                <> Send </>\n              }\n              {!this.state.modalSendOrReceive &&\n                <> Receive </>\n              }\n              Method</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Method name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Input method name\" value={this.state.methodNameInModal} onChange={this.handleChangeMethodName} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>\n                  Args\n                  <Button variant=\"info\" size=\"sm\" onClick={this.handleAddArg}>Add</Button>\n                </Form.Label>\n                {this.state.methodArgsInModal.map((arg, argIndex) => \n                  <Container key={argIndex}>\n                    <Row className=\"mb-3\">\n                      <Col xs=\"auto\">\n                        <Form.Control type=\"text\" placeholder=\"Input argument name\" value={arg.name} onChange={(e) => this.handleChangeArgName(e, argIndex)}/>\n                      </Col>\n                      <Col xs=\"auto\">\n                        <Form.Select defaultValue={arg.type} onChange={(e) => this.handleChangeArgType(e, argIndex)}>\n                          <option value=\"string\">string</option>\n                          <option value=\"int\">int</option>\n                          <option value=\"bool\">bool</option>\n                          <option value=\"DateTime\">DateTime</option>\n                          <option value=\"object\">object</option>\n                        </Form.Select>\n                      </Col>\n                      <Col xs=\"auto\">\n                        {arg.type === \"object\" &&\n                          <Button variant=\"info\" type=\"button\" onClick={() => this.handleAddProperty(argIndex, [])}>\n                            <Plus/>\n                          </Button>\n                        }\n                        <Button variant=\"danger\" type=\"button\" onClick={() => this.handleDeleteArg(argIndex)}>\n                          <TrashFill/>\n                        </Button>\n                      </Col>\n                    </Row>\n                    {arg.type === \"object\" &&\n                      <ObjectInModal\n                        argIndex={argIndex}\n                        properties={arg.properties}\n                        propertyIndexes={[]}\n                        handleChangePropName={(event, argIndex, propertyIndexes) => this.handleChangePropName(event, argIndex, propertyIndexes)}\n                        handleChangePropType={(event, argIndex, propertyIndexes) => this.handleChangePropType(event, argIndex, propertyIndexes)}\n                        handleAddProperty={(argIndex, propertyIndexes) => this.handleAddProperty(argIndex, propertyIndexes)}\n                        handleDeleteProp={(argIndex, propertyIndexes) => this.handleDeleteProp(argIndex, propertyIndexes)}\n                      />\n                    }\n                  </Container>\n                )}\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n              Close\n            </Button>\n            {!this.state.modalAddOrEdit &&\n              <Button variant=\"danger\" onClick={this.handleDeleteMethod}>\n                Delete\n              </Button>\n            }\n            {!this.state.modalAddOrEdit &&\n              <Button variant=\"success\" onClick={this.handleEditMethod}>\n                Edit\n              </Button>\n            }\n            {this.state.modalAddOrEdit &&\n              <Button variant=\"info\" onClick={this.handleAddMethod}>\n                Add\n              </Button>\n            }\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}